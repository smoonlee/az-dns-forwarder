name: Update Alpine Release

on:
  push:
    branches: main 
  schedule:
    - cron: '0 0 * * 0'  # Runs every Sunday at midnight (00:00 UTC)
  workflow_dispatch:

jobs:
  update_release:
    runs-on: ubuntu-latest
    steps:
      - name: Check current Alpine release
        id: check_release
        run: |
          CURRENT_RELEASE=${{ vars.ALIPINE_CONTAINER_IMAGE_VERSION }}
          echo "Alpine Current: $CURRENT_RELEASE"
          
      - name: Get the latest stable Alpine release from Docker Hub
        id: get_latest_release
        run: |
          set -e
          LATEST_RELEASE=$(curl -s https://registry.hub.docker.com/v1/repositories/library/alpine/tags/latest | jq -r '.name')
          if [ -z "$LATEST_RELEASE" ]; then
            echo "Failed to fetch latest Alpine release."
            exit 1
          fi
          echo "Alpine Latest Stable: $LATEST_RELEASE"

      - name: Compare versions and update if necessary
        if: ${{ steps.check_release.outputs.CURRENT_RELEASE }} != ${{ steps.get_latest_release.outputs.LATEST_RELEASE }}
        run: |
          LATEST_VERSION=$(echo "${{ steps.get_latest_release.outputs.LATEST_RELEASE }}" | cut -d '.' -f 1,2)
          CURRENT_VERSION=$(echo "${{ steps.check_release.outputs.CURRENT_RELEASE }}" | cut -d '.' -f 1,2)
          if [ "$LATEST_VERSION" != "$CURRENT_VERSION" ]; then
            echo "Updating Alpine to ${{ steps.get_latest_release.outputs.LATEST_RELEASE }}"
            # Perform update steps here
          else
            echo "No update needed. Current version is up to date."
          fi          
